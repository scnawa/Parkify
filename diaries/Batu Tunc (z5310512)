Week 1: 
In the first week we decided to do project 7, car space rental management system. We discussed the task breifly and allocated the project owner was identified to Sarvesh and Ridhvik appointed as the Scrum Master. I was made to be a frontend dev on this project. 

Week 2: 
We slowly made the proposal. The user stories were put onto jira. I personally did the story board for the admin role, taking in the user stories from jira to create a storyboard which encompassed that all.

Week 3: 
We thought about the sprint 1 user stories and decided to add in other funtionalites such as creating/editing/upload listings and other stuff into it as we felt the initial load was too little.

Week 4: 
We started working on the project codebase, with half and half split of the team to focus on the frontend and backend. I worked on the frontend, specifically the admin page, live listings page, login page, signup page, verficiation page, and did some general oversight of the entire site. At this point, the frontend was done without the backend as we did not connect it yet. Hence this week was more about design of the pages rather than functionality. 

Week 5-6:
We had fully started to integrate the backend with the frontend by this stage. I personally made the UI look nicer for everything. Made it so that when the user isn't logged in and accesses the mylistings page, it shows a warning rather than fetching the api incorrectly. I connected the live listings main homepage with the backend to show all the active parking spaces and did some ui styling changes here. I also added in user login persistency so that the user stays logged in on refresh / component reload. Also did some bug fixing in the backend to do with getting active listings. I further adjusted the UI for the alllisting page in order to make the listing images shown better and changed the colour scheme to use #4caf50. And added an alert/popup when a provider created a listing (frontend alert only).

Week 7 (apr1 commit/merge): I added searching, filtering, and sorting in the main home page. The user is now able to sort by price (low->high or high->low), search by address (i changed the search in the backend to use regex instead to make it cleaner and as regex is a trusted functionality). The search bar for search by address is in the nav bar (different file), so there was some interesting ways I utliised react's system in order to ensure that the functionality would work (further details are in the report under the implementation challenges section 4.4). Changed update_listing, delete_listing, activate_listing and deactive listing in the backend to synchronise their changes of listings in the user db to be the same as the listings in the listing db (needs to be done for other backend functions that affect listings too). This is because we created a listings db seperately for time complexity purposes, but there are still listings under each user in the user db. So any change for the listings under the user db must be reflected in the listings db for that listing.

Week 8: This week I made syncronised listings when user deletes their account on both user db and listing db, following on from last week. I also added styling changes and further bug fixes. Added in functionality of user can also search by distance (and the default distance is set to 50km). The notifications functionality as it exists is just currently a place holder with no interaction with the backend. I made its styling a bit better frontend side. A major thing I added was all the admin functionalities to do with delete/editing listings of a user for admin along with the admin login/interaction. I had to add some backend routes and functions for this too. 

Week 9: I added pycache to the gitignore file as it was casuing merge issues and is not an important file. I also did a major addition of allowing the admin to view/edit/delete a user's profile and account details. I also made sure that the admin can search for users using MUI's library and thus the admin can now search and select users to view both their listings and their profile. Then I added another major admin functionality, disputes. I made it so that users can dispute previous bookings, providers can dispute users that have booked for disputes, and the admin can view and resolve all disputes. Added more items in the nav bar as well that were permenetly moved to the menu bar for mobile purposes (found another way for mobile reponsiveness by moving the nav bar items to the menu when viewport is lowered.). Primarily from Sarvesh and Aditya (i did the changes on my commit mostly but i was screen sharing and they told me a lot of what to do so i was more of the helper here), we made sure that the prebooking timer expires at 10minutes no matter if the user is on the website or not by making use of a timer thread in the backend. I then made the ability of the admin to book to be disabled as the admin should only be able to view listings not book. I fixed further mobile res issues and made the search bar look nicer. 

I added a major persistence functionality for all booking phases. If the user is either in prebooking/booking/endbooking(payment) phase, and they logout or change pages, once they login or go to the homepage, they will be redirected with the correct data to whatever they were last on. I also added a liking/disliking major functionality where the user can like or unlike a listing on the listing page. This can only be done if the user has at least one booking for that listing. I cleaned up the hisotry page a bit more. I made it so that when you click my listigns have havent setup stripe, it asks you whether to confirm redirect or cancel and go back to the previous page. 

I made the maps only scrollable on ctrl+scroll to ensure that users have a better user experience. It was annyoing to use the website and constantly have the scroll catch on the map and focus on it. Also added in some bug fixes. Added further mobile res fixes and made sure to show like counter when not logged in still and disable likes when not logged in.

Then I added a car number plate functionaltiy where the user must input their car number plate for the car they wish to book for a listing. More Ui changes. Sam made the whole front/backend tokenised, but I fixed some of my code which wasn't working properly with this to make it work. 

Week 10: I implemented the recommendations from the backend that sarvesh from into the frontend. Made sure that they only appear for a user when there are 3 or more users in the system as the recommendations can only work in this way due to how the AI is trained. There was a bug with the selection of a user for admin view, i fixed it. Also made the page for a user on the admin come back after the admin edits that users listing to make the expeirence better. Finally I removed "read" from notifications to make it look better. 